@model QBProduction.Web.Models.BomRun

@{
    ViewBag.Title = "Start Production";
}

<h2>Start New Production Batch</h2>

@using (Html.BeginForm("StartProduction", "Production", FormMethod.Post, new { @class = "mt-3" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group row mb-3">
            @Html.LabelFor(model => model.productionitem, "Production Item", htmlAttributes: new { @class = "col-md-2 col-form-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.productionitem, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter production item name" } })
                @Html.ValidationMessageFor(model => model.productionitem, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row mb-3">
            @Html.LabelFor(model => model.totalqtyproduced, "Quantity to Produce", htmlAttributes: new { @class = "col-md-2 col-form-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.totalqtyproduced, new { htmlAttributes = new { @class = "form-control", type = "number", step = "0.01" } })
                @Html.ValidationMessageFor(model => model.totalqtyproduced, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row mb-3">
            @Html.LabelFor(model => model.uom, "Unit of Measure", htmlAttributes: new { @class = "col-md-2 col-form-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.uom, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.uom, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row mb-3">
            @Html.LabelFor(model => model.comments, htmlAttributes: new { @class = "col-md-2 col-form-label" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.comments, 4, 50, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.comments, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row mb-3">
            @Html.LabelFor(model => model.processedby, "Processed By", htmlAttributes: new { @class = "col-md-2 col-form-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.processedby, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.processedby, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Start Production" class="btn btn-success" />
                @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-secondary" })
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
